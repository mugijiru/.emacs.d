<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>バッファ管理 on 麦汁&#39;s Emacs Config</title>
    <link>https://mugijiru.github.io/.emacs.d/buffer-management/</link>
    <description>Recent content in バッファ管理 on 麦汁&#39;s Emacs Config</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language><atom:link href="https://mugijiru.github.io/.emacs.d/buffer-management/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>scratch-log</title>
      <link>https://mugijiru.github.io/.emacs.d/buffer-management/scratch-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mugijiru.github.io/.emacs.d/buffer-management/scratch-log/</guid>
      <description>概要 scratch-log は、Emacs でちょっとした Emacs Lisp なんかを試し書きする時に使う *scratch* バッファを永続化してくれるパッケージ。
自分なんかは Emacs Lisp だけでなくちょっとメモを置いといたりもするので勝手に永続化してくれるこいつにはとてもお世話になっている。
GitHub の README には作者のブログへのリンクしかないしそのブログは消えてるので一番まともに解説しているのは http://emacs.rubikitch.com/scratch-log/ だと思う。
インストール el-get から入れるだけ。
(el-get-bundle mori-dev/scratch-log) 有効化 どうも明示的に require しないといけないっぽくて、そうしている。ちょっと本当にそうなのか検証したい気はする。
(require &amp;#39;scratch-log) 類似品など persistent-scratch これも scratch を永続化させるやつ。カスタマイズ性はこっちがありそう unkillable-scratch scratch バッファを kill させないやつ。同じような機能が scratch-log にもある auto-save-buffers-enhanced 自動保存機能がメインだけど scratch を自動保存する機能もある </description>
    </item>
    
    <item>
      <title>tempbuf</title>
      <link>https://mugijiru.github.io/.emacs.d/buffer-management/tempbuf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mugijiru.github.io/.emacs.d/buffer-management/tempbuf/</guid>
      <description>概要 tempbuf-mode は不要になったと思われるバッファを自動的に kill してくれるパッケージ。使っていた時間が長い程、裏に回った時には長い時間保持してくれる。
つまり、一瞬開いただけのファイルは明示的に kill しなくても勝手にやってくれるのでファイルを開いてそのまま放置みたいなことをしがちなズボラな人間には便利なやつ。
インストール いつも通り el-get で入れている。
(el-get-bundle tempbuf-mode) 勝手に kill させないファイルの指定 org-clock を使うようなファイルは kill されると org-clock が狂って面倒なことになるのでそれらのファイルは勝手に kill されないように ignore リストに突っ込んでいる
(setq my/tempbuf-ignore-files &amp;#39;(&amp;#34;~/Documents/org/tasks/gtd.org&amp;#34; &amp;#34;~/Documents/org/tasks/interrupted.org&amp;#34; &amp;#34;~/Documents/org/tasks/next-actions.org&amp;#34; )) find-file への hook find-file した時に上でリストアップしたファイルだった場合は kill されないように tempbuf-mode が自動的に無効になるような hook を用意している。
(defun my/find-file-tempbuf-hook () (let ((ignore-file-names (mapcar &amp;#39;expand-file-name my/tempbuf-ignore-files))) (unless (member (buffer-file-name) ignore-file-names) (turn-on-tempbuf-mode)))) hook の設定 find-file では上で作成した hook を使うことで kill されたくないファイルは kill されないようにしている
(add-hook &amp;#39;find-file-hook &amp;#39;my/find-file-tempbuf-hook) また dired buffer も邪魔になりがちだけど、デフォルトだと対象にならないのでこいつらも tempbuf-mode の管理対象となるように tempbuf-mode を有効にしている。</description>
    </item>
    
  </channel>
</rss>
