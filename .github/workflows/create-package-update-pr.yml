name: Update package

on: push

jobs:
  update-package:
    runs-on: ubuntu-latest
    env:
      PACKAGE: "projectile"

    steps:
    - uses: purcell/setup-emacs@master
      with:
        version: 28.1

    - uses: actions/checkout@v2

    - name: Update package
      run: |
        emacs -Q --batch --eval "(setq user-emacs-directory \"$(pwd)/\")" -l ./init-el-get.el --eval="(my/el-get-auto-update \"$PACKAGE\")"

    - name: Detect el-get.lock diff
      run: |
        git diff --exit-code --quiet el-get.lock || git add el-get.lock && echo 'found_update=1' >> $GITHUB_ENV

    - if: env.found_update == 1
      name: Get timestamp
      run: |
        echo "UPDATE_TIMESTAMP=$(date +%Y-%m-%d-%H%M%S)" >> $GITHUB_ENV

    # - if: env.found_update == 1
    #   name: Set branch name
    #   run: |
    #     echo "BRANCH_NAME=update-projectile-$(echo "${{ env.UPDATE_TIMESTAMP }}")" >> $GITHUB_ENV

    - if: env.found_update == 1
      id: get-pr-body
      name: Set commit message
      run: |
        body=$(cat /tmp/commit-message.txt)
        echo ::set-output name=body::$body

    - if: env.found_update == 1
      name: Create PR
      uses: peter-evans/create-pull-request@v4
      env:
        BRANCH_NAME: update-${{ env.PACKAGE }}-${{ env.UPDATE_TIMESTAMP }}
        PR_TITLE: Update ${{ env.PACKAGE }}
      with:
        token: ${{ secrets.CI_DISPATCH_TOKEN }}
        branch: ${{ env.BRANCH_NAME }}
        commit-message: ${{ steps.get-pr-body.outputs.body }}
        title: ${{ env.PR_TITLE }}
        body: ${{ steps.get-pr-body.outputs.body }}

    # - if: env.found_update == 1
    #   - name: Notify slack build result
    #     uses: lazy-actions/slatify@master
    #     if: always()
    #     with:
    #         type: ${{ job.status }}
    #         job_name: '*el-get update*'
    #         mention: 'here'
    #         username: 'GitHub Actions'
    #         icon_emoji: 'emacs'
    #         mention_if: 'failure'
    #         channel: '#develop'
    #         url: ${{ secrets.SLACK_WEBHOOK }}
    #         commit: true
    #         token: ${{ secrets.GITHUB_TOKEN }}
